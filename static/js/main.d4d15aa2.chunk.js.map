{"version":3,"sources":["reducers/login.js","store.js","components/Login/LoginContainer.js","components/Login/LoginPage.js","components/Navbar/Navbar.js","components/Minimap/Minimap.js","actions/isSea.js","components/Earthquakes.js","actions/search.js","App.js","serviceWorker.js","index.js","components/Minimap/redmarker.svg"],"names":["initialState","user_id","api_key","user_name","email","isLoggedIn","store","createStore","state","action","console","log","type","payload","composeWithDevTools","auth","require","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","marginLeft","marginRight","marginTop","connect","ownProps","user","handleOpen","dispatch","handleLogin","handleLogout","classes","useState","setEmail","useEffect","test","toLowerCase","setValidEmail","password","setPassword","length","setValidPassword","errors","setErrors","validEmail","validPassword","getState","theUser","setTheUser","Login","Button","onClick","Paper","className","FormControl","TextField","required","name","placeholder","variant","onChange","e","target","value","onChangeEmail","onChangePass","disabled","login","then","token","credentials","decode","info","catch","err","status","body","message","title","flexGrow","center","margin","Navbar","AppBar","Toolbar","Typography","Minimap","props","iconDot","L","Icon","iconUrl","iconRetinaUrl","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","iconSize","Point","long","lat","zoom","Fragment","Map","style","height","display","this","doubleClickZoom","closePopupOnClick","dragging","zoomSnap","zoomDelta","zoomControl","trackResize","touchZoom","scrollWheelZoom","attributionControl","TileLayer","url","Marker","icon","Component","GeoJsonLookup","getMap","items","filter","Earthquakes","handleDateChange","date","newDate","Date","setDate","getDate","setState","dateFrom","dateTo","getUSGS","handleMagnitudeChange","event","magnitude","Earthquake","quake","locationType","lng","map","hasContainers","coordinates","isSea","point","key","id","paddingBottom","overflow","verticalAlign","place","time","d","item_id","undefined","item_url","earthquakes","getFullYear","twoDigits","getMonth","getHours","getMinutes","getSeconds","process","REACT_APP_API_KEY","search4Band","func","setKey","options","types","geometry","limit","search","response","tileThumb","_links","thumbnail","month","split","parseInt","year","lon","getDateTwoDaysAgo","start","end","fetch","method","mode","cache","headers","redirect","referrerPolicy","res","json","quakes","features","i","earthquake","properties","toDateString","mag","bbox","pointToBBOX","push","getExplorerSites","geoConfig","dateRange","search_filter","item_types","searchBody","useKey","today","textAlign","utils","DateFnsUtils","label","format","KeyboardButtonProps","InputLabel","shrink","Select","labelId","displayEmpty","MenuItem","App","createMuiTheme","primary","light","main","dark","contrastText","secondary","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d4d15aa2.chunk.js","sourcesContent":["const initialState = {\n  user_id: '',\n  api_key: '',\n  user_name: '',\n  email: '',\n  isLoggedIn: false\n}\n\nexport const loginReducer = function (state = initialState, action) {\n  console.log('action ', action);\n  switch (action.type) {\n    case 'LOGIN':\n      state = action.payload;\n      return state;\n    case 'LOGOUT':\n      return state = initialState;\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loginReducer } from './reducers/login';\n\nexport const store = createStore(loginReducer, composeWithDevTools());\n","import React, { useEffect, useState } from 'react';\nimport { Button, FormControl, Paper, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport decode from 'jwt-decode';\nimport { store } from '../../store';\n\nconst auth = require( '@planet/client/api/auth' );\n// const errors = require( '@planet/client/api/errors' );\n\nconst useStyles = makeStyles( theme => ( {\n  paper: {\n    position: 'absolute',\n    width: '35%',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing( 2, 4, 3 ),\n    marginLeft: '30%',\n    marginRight: '35%',\n    marginTop: '10%'\n  },\n} ) );\n\nexport const LoginContainer = ( {user, handleOpen, handleLogin, handleLogout} ) => {\n  const classes = useStyles();\n  \n  let [email, setEmail] = useState('');\n  useEffect(() => {\n    // eslint-disable-next-line no-useless-escape\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if ( re.test( email.toLowerCase() ) ) {\n      setValidEmail( true )\n    } else {\n      setValidEmail( false )\n    }\n  }, [email]);\n  \n  let [password, setPassword] = useState( '');\n  useEffect(() => {\n    if ( password.length > 0 ) {\n      setValidPassword( true )\n    } else {\n      setValidPassword( false )\n    }\n  }, [password] );\n  \n  let [errors, setErrors] = useState('');\n  useEffect((errors) => {\n    console.log( errors )\n  }, [errors] );\n  \n  let [validEmail, setValidEmail] = useState( false );\n  let [validPassword, setValidPassword] = useState( false );\n  \n  let [theUser, setTheUser] = useState( store.getState() );\n  useEffect(() => {\n    // let mounted = true;\n    // if(mounted){\n      // handleLogin( theUser );\n    console.log(theUser);\n    // }\n    // return () => mounted = false;\n  }, [theUser]);\n  \n  const login = () => {             // TODO this is being called when the modal is opened in the navbar, not when the credentials are entered and logged i\\\n    handleOpen();\n    auth.login( email, password ).then( token => {\n      const credentials = decode( token );\n      if ( credentials ) {\n        let info = {\n          user_id: credentials.user_id,\n          api_key: credentials.api_key,\n          user_name: credentials.user_name,\n          email: credentials.email,\n          isLoggedIn: true\n        };\n        handleLogin(info, () => {\n          setTheUser( store.getState );\n        });\n      }\n    } ).catch( err => {\n      console.log( err );\n      if ( err.status === 400 ) {\n        setErrors( err.errors.email[0] );\n      } else if ( err.status === 401 ) {\n        setErrors( err.body.message );\n      }\n    } )\n  };\n\n  const logout = () => {\n    handleLogout();\n  };\n\n  // TODO better way to name actions might fix this?\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value)\n  };\n\n  const onChangePass = (e) => {\n    setPassword(e.target.value)\n  };\n  \n  const Login = () => {\n    if (user.isLoggedIn) {\n      return (\n        <>\n        <h4>Welcome {user.user_name}!</h4>\n        <Button onClick={() => logout()}>Logout</Button>\n        <h1>Earthquakes</h1>\n        </>\n      )\n    }\n    return (\n      <Paper className={classes.paper}>\n        <h2>Log In to Planet Labs</h2>\n        <FormControl>\n          <TextField required={true} name={'email'} placeholder={'Email'} variant={'outlined'}\n                     onChange={( e ) => {onChangeEmail( e )}} value={email}/>\n          <TextField required={true} name={'password'} placeholder={'Password'} type=\"password\" variant={'outlined'}\n                     onChange={( e ) => {onChangePass( e )}} value={password}/>\n          <Button disabled={!validEmail && !validPassword} onClick={() => login()}>Login</Button>\n        </FormControl>\n      </Paper>\n    )\n  };\n\n  return(<Login/>)\n};\n","import { connect } from 'react-redux';\nimport { LoginContainer } from './LoginContainer';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state,\n    handleOpen: ownProps.handleOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogin: ( user ) => dispatch( { type: 'LOGIN', payload: user } ),\n    handleLogout: () => dispatch( { type: 'LOGOUT' } ),\n  }\n};\n\nexport const LoginPage = connect( mapStateToProps, mapDispatchToProps )( LoginContainer );","import React, { useState } from 'react';\nimport { AppBar, Button, Modal, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LoginPage } from '../Login/LoginPage';\nimport { store } from '../../store';\n\nconsole.log('user_id', store.getState().user_id);\n\nconst useStyles = makeStyles( ( theme ) => ( {\n  title: {\n    flexGrow: 1,\n  },\n  center: {\n    margin: '0 auto'\n  }\n} ) );\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState( false );\n  \n  const handleOpen = () => {\n    setOpen( !open );\n  };\n  \n  const LoggedIn = () => {\n    console.log(store.getState().isLoggedIn);\n    if(store.getState().isLoggedIn){\n      return <Typography>{store.getState().user_name}</Typography>\n    }\n    else{\n      return <Button color=\"inherit\" onClick={handleOpen}>Login</Button>\n    }\n  };\n  \n  return (\n    <>\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Disasters\n          </Typography>\n          {/* <LoggedIn /> */}\n        </Toolbar>\n        {/* <Modal\n          aria-labelledby=\"login-modal-title\"\n          aria-describedby=\"login-modal-description\"\n          open={open}\n          onClose={handleOpen}\n          className={classes.center}\n        >\n          <LoginPage handleOpen={handleOpen}/>\n        </Modal> */}\n      </AppBar>\n    </>\n  )\n};\n\nexport default Navbar;","import React, {Component} from 'react';\nimport { Map, Marker, TileLayer } from 'react-leaflet';\nimport L from 'leaflet';\n\nexport default class Minimap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: [props.long, props.lat],\n      zoom: props.zoom\n    };\n  }\n  \n  iconDot = new L.Icon({\n    iconUrl: require('./redmarker.svg'),\n    iconRetinaUrl: require('./redmarker.svg'),\n    iconAnchor: null,\n    popupAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: new L.Point(25, 25),\n    className: 'dummy',\n  });\n\n  render() {\n    return (\n      <React.Fragment>\n      <Map\n        style={{width: '225px', height:'225px', display: 'inline-block'}}\n        center={this.state.position}\n        zoom={this.state.zoom}\n        doubleClickZoom={false}\n        closePopupOnClick={false}\n        dragging={true}\n        zoomSnap={false}\n        zoomDelta={false}\n        zoomControl={false}\n        trackResize={false}\n        touchZoom={false}\n        scrollWheelZoom={false}\n        attributionControl={false}>\n        <TileLayer\n          // url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\n          url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\n          // url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\n          // attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n        <Marker icon={this.iconDot} position={this.state.position}/>\n      </Map>\n      </React.Fragment>\n    );\n  }\n}\n","const GeoJsonLookup = require('geojson-geometries-lookup');\nconst getMap = require('@geo-maps/earth-seas-1m');\n\n\nexport default function isSea(lat, lng) {\n  const map = getMap();\n  const lookup = new GeoJsonLookup(map);\n  return lookup.hasContainers({type: 'Point', coordinates: [lng, lat]});\n}\n","import React, { Component } from 'react';\nimport { Paper, Typography, InputLabel, MenuItem, FormControl, Select, Button } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { searchBody } from '../actions/search';\nimport Minimap from './Minimap/Minimap';\nimport isSea from '../actions/isSea';\nimport { store } from '../store';\n\nconst { auth, items, filter } = require( '@planet/client/api' );\n\nexport default class Earthquakes extends Component {\n  constructor( props ) {\n    super( props );\n    this.d = new Date();\n    \n    this.state = {\n      item_id: undefined,\n      item_url: undefined,\n      earthquakes: [],\n      dateFrom: new Date( `${this.d.getFullYear()}-${this.twoDigits(this.d.getMonth() + 1)}-${this.twoDigits(this.d.getDate()-1)}T${this.twoDigits(this.d.getHours())}:${this.twoDigits(this.d.getMinutes())}:${this.twoDigits(this.d.getSeconds())}` ),\n      dateTo: new Date( `${this.d.getFullYear()}-${this.twoDigits(this.d.getMonth() + 1)}-${this.twoDigits(this.d.getDate())}T${this.twoDigits(this.d.getHours())}:${this.twoDigits(this.d.getMinutes())}:${this.twoDigits(this.d.getSeconds())}` ),\n      magnitude: 5,\n    };\n    this.key = process.env.REACT_APP_API_KEY;\n    this.search4Band();\n    this.getUSGS();\n  }\n  \n  twoDigits(func) {\n    return (func < 10 ? '0' : '') + func;\n  }\n  \n  useKey() {\n    auth.setKey( store.getState().api_key );\n  }\n  \n  search4Band() {\n    const geo = {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [-122.52811431884767, 37.665342132088284],\n          [-122.34683990478516, 37.665342132088284],\n          [-122.34683990478516, 37.81493737606794],\n          [-122.52811431884767, 37.81493737606794],\n          [-122.52811431884767, 37.665342132088284]\n        ]\n      ]\n    };\n    const options = {\n      types: ['PSScene4Band'],\n      filter: filter.geometry( 'geometry', geo ),\n      limit: 10\n    };\n    // this.useKey();\n    items.search( options ).then( response => {\n      console.log( response );\n      const tileThumb = `${response[0]._links.thumbnail}?api_key=${this.key}`;\n      this.setState( {\n        item_id: response[0].id,\n        item_url: tileThumb\n      } );\n    } );\n  }\n  \n  getDate() {\n    let time = this.state.earthquakes[0].time;\n    time = time.split( ' ' );\n    let month;\n    switch (time[1]) {\n      case 'Jan':\n        month = '01';\n        break;\n      case 'Feb':\n        month = '02';\n        break;\n      case 'Mar':\n        month = '03';\n        break;\n      case 'Apr':\n        month = '04';\n        break;\n      case 'May':\n        month = '05';\n        break;\n      case 'Jun':\n        month = '06';\n        break;\n      case 'Jul':\n        month = '07';\n        break;\n      case 'Aug':\n        month = '08';\n        break;\n      case 'Sept' || 'Sep':\n        month = '09';\n        break;\n      case 'Oct':\n        month = '10';\n        break;\n      case 'Nov':\n        month = '11';\n        break;\n      default:\n        month = '12';\n        break;\n    }\n    const date = parseInt( time[2] );\n    const year = time[3];\n    return [`${year}-${month}-${date - 2}T00:00:00.000Z`, `${year}-${month}-${date + 2}T23:59:59.999Z`];\n    // TODO move this url somewhere else. url does not work without item types and ids (supposed to bring user to explorer\n    //  console.log(`https://www.planet.com/explorer/#/center/${this.state.earthquake.point[0]},${this.state.earthquake.point[0]}/dates/${year}-${month}-${date - 2}T00:00:00.000Z..${year}-${month}-${date + 2}T23:59:59.999Z/geometry/POLYGON((${this.state.earthquake.bbox[0][0]}+${this.state.earthquake.bbox[0][1]},${this.state.earthquake.bbox[1][0]}+${this.state.earthquake.bbox[1][1]},${this.state.earthquake.bbox[2][0]}+${this.state.earthquake.bbox[2][1]},${this.state.earthquake.bbox[3][0]}+${this.state.earthquake.bbox[3][1]},${this.state.earthquake.bbox[0][0]}+${this.state.earthquake.bbox[0][1]}))` )\n  }\n  \n  pointToBBOX( lon, lat ) {\n    return [[\n      [lon - 0.2, lat + 0.2],\n      [lon + 0.2, lat + 0.2],\n      [lon - 0.2, lat - 0.2],\n      [lon + 0.2, lat - 0.2],\n      [lon - 0.2, lat + 0.2]\n    ]];\n  }\n  \n  getUSGS() {\n    let { year, month, date } = this.getDateTwoDaysAgo();\n    console.log( 'today', year, month, date );\n    const start = `${this.state.dateFrom.getFullYear()}-${this.state.dateFrom.getMonth()}-${this.state.dateFrom.getDate()}`;\n    const end = `${this.state.dateTo.getFullYear()}-${this.state.dateTo.getMonth()}-${this.state.dateTo.getDate()}`;\n    \n    fetch( `https://earthquake.usgs.gov/fdsnws/event/1/query?minmagnitude=${this.state.magnitude}&format=geojson&limit=10&starttime=${start}&endtime=${end}`, {\n      // fetch( `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&minmagnitude=5&limit=10`, {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n    } ).then( ( res ) => {\n      return res.json();\n    } ).then( res => {\n      console.log( 'USGS', res );\n      const quakes = res.features;\n      if ( quakes === [] ) {\n      \n      } else {\n        let earthquakes = [];\n        for ( let i = 0; i < quakes.length; i++ ) {\n          console.log( 'coord', quakes[i].geometry.coordinates[0], quakes[i].geometry.coordinates[1] );\n          let milliseconds = new Date( quakes[i].properties.time );\n          let earthquake = {          // TODO store image(s) and link to explorer\n            id: i,\n            time: milliseconds.toDateString(),\n            magnitude: quakes[i].properties.mag,\n            title: quakes[i].properties.title,\n            place: quakes[i].properties.place,\n            point: [quakes[i].geometry.coordinates[1], quakes[i].geometry.coordinates[0]],\n            bbox: this.pointToBBOX( quakes[i].geometry.coordinates[0], quakes[i].geometry.coordinates[1] ),\n            type: quakes[i].properties.earthquake\n          };\n          earthquakes.push( earthquake );\n          console.log( 'time', earthquake.time )\n        }\n        this.setState( { earthquakes: earthquakes }, () => {\n          console.log( this.state );\n          this.getExplorerSites();\n        } );\n      }\n    } )\n  }\n  \n  getExplorerSites() {\n    // constructing search body\n    if(this.state.earthquakes.length > 0){\n      const geoConfig = {\n        \"type\": \"Polygon\",\n        \"coordinates\": this.pointToBBOX( this.state.earthquakes[0].point[0], this.state.earthquakes[0].point[1] )\n      };\n      const dateRange = this.getDate();\n      const { search_filter, item_types } = searchBody( geoConfig, dateRange );\n  \n      if(store.getState().isLoggedIn) {\n        this.useKey();\n        items.search( { filter: search_filter, types: item_types } ).then( response => {\n          console.log( 'response', response );\n        } );\n      }\n    }\n  }\n  \n  getDateTwoDaysAgo() {\n    let today = new Date();\n    let year = today.getFullYear();\n    let month = today.getMonth() + 1;\n    let date = today.getDate() - 2;\n    return { year, month, date };\n  }\n  \n  handleDateChange = date => {\n    let newDate = new Date( date );\n    newDate.setDate( newDate.getDate() + 1 );\n    this.setState( { dateFrom: date, dateTo: newDate }, () => {\n      this.getUSGS()\n    } );\n  };\n  \n  handleMagnitudeChange = ( event ) => {\n    this.setState( { magnitude: event.target.value }, () => {\n      this.getUSGS()\n    } );\n  };\n  \n  Earthquake = ( quake ) => {\n    console.log( quake );\n    const locationType = isSea( quake.point[1], quake.point[0] ) ? 'Sea' : 'Land';\n    return (\n      <React.Fragment key={quake.id}>\n        <Paper style={{ padding: '2%', paddingBottom: '-2%', margin: '5%', overflow: 'hidden' }}>\n          <Minimap key={`${quake.point[1]}/${quake.point[0]}`} lat={quake.point[1]} long={quake.point[0]} zoom={3}/>\n          <div style={{ display: 'inline-block', marginLeft: '5%', verticalAlign: 'top' }}>\n            <Typography variant={'h5'}>{quake.title}</Typography>\n            <Typography variant={'body1'}><strong>Magnitude:</strong> {quake.magnitude}</Typography>\n            <Typography variant={'body1'}><strong>Place:</strong> {quake.place}</Typography>\n            <Typography variant={'body1'}><strong>Time of earthquake:</strong> {quake.time}</Typography>\n            <Typography variant={'body1'}><strong>Coordinates of\n              earthquake:</strong> {quake.point[0]}°N, {quake.point[1]}°E</Typography>\n            <Typography variant={'body1'}><strong>Land or Sea:</strong> {locationType}</Typography>\n          </div>\n        </Paper>\n      </React.Fragment>\n    )\n  };\n  \n  render() {\n    \n    let earthquakes = this.state.earthquakes.map( quake => this.Earthquake( quake ) );\n    if (earthquakes.length === 0) {\n      earthquakes = <p style={{textAlign: 'center', marginTop: '20%'}}>No Results</p>\n    }\n    \n    return (\n      <>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <div style={{height: '64px'}} />\n          <div\n            style={{\n              margin: '0% 5% 0% 5%'\n            }}\n          >\n            <KeyboardDatePicker\n              margin=\"normal\"\n              variant=\"inline\"\n              id=\"date-picker-dialog\"\n              label=\"Select a Date\"\n              format=\"MM/dd/yyyy\"\n              value={this.state.dateFrom}\n              onChange={this.handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <FormControl style={{ margin: '15px' }}>\n              <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n                Magnitude\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-placeholder-label-label\"\n                id=\"demo-simple-select-placeholder-label\"\n                value={this.state.magnitude}\n                onChange={this.handleMagnitudeChange}\n                displayEmpty\n              >\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n                <MenuItem value={5}>5</MenuItem>\n                <MenuItem value={6}>6</MenuItem>\n                <MenuItem value={7}>7+</MenuItem>\n              </Select>\n              {/* <Button onClick={() => console.log('user', store.getState())}>State</Button> */}\n            </FormControl>\n          </div>\n          {/*<Paper>*/}\n          {/*  <Typography>{this.state.item_id}</Typography>*/}\n          {/*  <img src={this.state.item_url} alt=\"\"/>*/}\n          {/*</Paper>*/}\n          {earthquakes}\n        </MuiPickersUtilsProvider>\n      </>\n    )\n  }\n}","export function searchBody( geoConfig, dateRange ) {\n\tlet search_filter = {\n\t\t\"type\": \"AndFilter\",\n\t\t\"config\": [\n\t\t\t{\n\t\t\t\t\"type\": \"GeometryFilter\",\n\t\t\t\t\"field_name\": \"geometry\",\n\t\t\t\t\"config\": geoConfig\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"OrFilter\",\n\t\t\t\t\"config\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"AndFilter\",\n\t\t\t\t\t\t\"config\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"StringInFilter\",\n\t\t\t\t\t\t\t\t\"field_name\": \"item_type\",\n\t\t\t\t\t\t\t\t\"config\": [\n\t\t\t\t\t\t\t\t\t\"PSScene4Band\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"RangeFilter\",\n\t\t\t\t\t\t\t\t\"field_name\": \"sun_elevation\",\n\t\t\t\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\t\t\t\"gte\": 0,\n\t\t\t\t\t\t\t\t\t\"lte\": 90\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"AndFilter\",\n\t\t\t\t\t\t\"config\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"StringInFilter\",\n\t\t\t\t\t\t\t\t\"field_name\": \"item_type\",\n\t\t\t\t\t\t\t\t\"config\": [\n\t\t\t\t\t\t\t\t\t\"REOrthoTile\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"RangeFilter\",\n\t\t\t\t\t\t\t\t\"field_name\": \"sun_elevation\",\n\t\t\t\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\t\t\t\"gte\": 0,\n\t\t\t\t\t\t\t\t\t\"lte\": 90\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"AndFilter\",\n\t\t\t\t\t\t\"config\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"StringInFilter\",\n\t\t\t\t\t\t\t\t\"field_name\": \"item_type\",\n\t\t\t\t\t\t\t\t\"config\": [\n\t\t\t\t\t\t\t\t\t\"SkySatCollect\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"type\": \"RangeFilter\",\n\t\t\t\t\t\t\t\t\"field_name\": \"sun_elevation\",\n\t\t\t\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\t\t\t\"gte\": 0,\n\t\t\t\t\t\t\t\t\t\"lte\": 90\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"OrFilter\",\n\t\t\t\t\"config\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"DateRangeFilter\",\n\t\t\t\t\t\t\"field_name\": \"acquired\",\n\t\t\t\t\t\t\"config\": {\n\t\t\t\t\t\t\t\"gte\": dateRange[0],\n\t\t\t\t\t\t\t\"lte\": dateRange[1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\tlet item_types = [\n\t\t\"REOrthoTile\",\n\t\t\"PSScene4Band\",\n\t\t\"SkySatCollect\"\n\t];\n\treturn { search_filter, item_types };\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { store } from './store';\nimport Earthquakes from './components/Earthquakes';\n\nfunction App() {\n  const theme = createMuiTheme( {\n    palette: {\n      primary: {\n        light: '#8eacbc',\n        main: '#607d8c',\n        dark: '#34515f',\n        contrastText: '#fff',\n      },\n      secondary: {\n        light: '#ffa4a2',\n        main: '#e57373',\n        dark: '#af4448',\n        contrastText: '#000',\n      },\n    }\n  } );\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Navbar/>\n          <Earthquakes/>\n        </Provider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/redmarker.d1b34539.svg\";"],"sourceRoot":""}